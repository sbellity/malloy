/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

source: products is duckdb.table("static/data/products.parquet") extend {
  measure: total_sales is retail_price.sum()
  measure: avg_margin is avg(retail_price - cost)
  measure: product_count is count()
  measure: total_cost is cost.sum()
  measure: avg_price is retail_price.avg()

  #(story)
  # Auto-Detection: First dimension and first measure automatically used
  # pie_chart
  view: auto_detection_example is {
    group_by: brand
    aggregate: total_sales
    limit: 8
  }

  #(story)
  # Explicit Category Field: Specify which field to use for pie slices
  # pie_chart { category=category }
  view: explicit_category_example is {
    group_by: category
    aggregate: 
      total_sales
      product_count
    limit: 6
  }

  #(story)
  # Explicit Value Field: Specify which field to use for slice sizes
  # pie_chart { value=product_count }
  view: explicit_value_example is {
    group_by: brand
    aggregate: 
      total_sales
      product_count
    limit: 7
  }

  #(story)
  # Both Category and Value: Explicitly set both fields
  # pie_chart { category=department value=avg_margin }
  view: explicit_both_example is {
    group_by: department
    aggregate: 
      avg_margin
      total_sales
    limit: 5
  }

  #(story)
  # Spark Size: Small pie chart for embedding in dashboards
  # pie_chart { size=spark }
  view: spark_size_example is {
    group_by: category
    aggregate: total_sales
    limit: 4
  }

  #(story)
  # Basic Donut Chart: Pie chart with a hole in the center
  # pie_chart { type=donut }
  view: basic_donut_example is {
    group_by: brand
    aggregate: total_sales
    limit: 6
  }

  #(story)
  # Small Donut Hole: Donut with small inner radius (1/8 of chart size)
  # pie_chart { type=donut hole=small }
  view: small_donut_hole_example is {
    group_by: department
    aggregate: total_cost
    limit: 4
  }

  #(story)
  # Medium Donut Hole: Donut with medium inner radius (1/6 of chart size)
  # pie_chart { style=donut innerRadius=medium }
  view: medium_donut_hole_example is {
    group_by: category
    aggregate: avg_price
    limit: 5
  }

  #(story)
  # Large Donut Hole: Donut with large inner radius (1/4 of chart size)
  # pie_chart { type=donut inner_radius=large }
  view: large_donut_hole_example is {
    group_by: brand
    aggregate: avg_margin
    limit: 7
  }

  #(story)
  # Short Form Hole Sizes: Using abbreviated size indicators
  # pie_chart { style=donut hole=s }
  view: short_form_small_hole is {
    group_by: department
    aggregate: product_count
    limit: 3
  }

  #(story)
  # Large Hole Short Form: Using 'l' for large hole size
  # pie_chart { type=donut innerRadius=l }
  view: short_form_large_hole is {
    group_by: category
    aggregate: total_cost
    limit: 6
  }

  #(story)
  # Spark Donut Chart: Small donut chart for compact display
  # pie_chart { type=donut size=spark hole=medium }
  view: spark_donut_example is {
    group_by: brand
    aggregate: avg_price
    limit: 4
  }

  #(story)
  # Data Limiting: Showing top categories with limit
  # pie_chart
  view: data_limiting_example is {
    group_by: brand
    aggregate: total_sales
    order_by: total_sales desc
    limit: 5
  }

  #(story)
  # Cost Analysis: Using cost data instead of sales
  # pie_chart { category=department value=total_cost }
  view: cost_analysis_example is {
    group_by: department
    aggregate: 
      total_cost
      total_sales
    limit: 6
  }

  #(story)
  # Margin Distribution: Analyzing profit margins by category
  # pie_chart { value=avg_margin }
  view: margin_distribution_example is {
    group_by: category
    aggregate: 
      avg_margin
      total_sales
    limit: 7
  }

  #(story)
  # Product Count Distribution: Show distribution by item count
  # pie_chart { category=brand value=product_count }
  view: product_count_distribution is {
    group_by: brand
    aggregate: 
      product_count
      total_sales
    order_by: product_count desc
    limit: 8
  }
} 